package kr.or.ddit.doctor.service.Impl;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.common.ServiceResult;
import kr.or.ddit.common.vo.HealthCheckupVO;
import kr.or.ddit.common.vo.MedicalTreatmentVO;
import kr.or.ddit.doctor.service.IDoctorService;
import kr.or.ddit.doctor.vo.ClinicVO;
import kr.or.ddit.doctor.vo.SickAndWoundedListVO;
import kr.or.ddit.mapper.doctor.DoctorMapper;
import kr.or.ddit.nurse.vo.MedicineVO;

@Service
public class DoctorServiceImpl implements IDoctorService {

	@Inject
	private DoctorMapper doctorMapper;
	
	// 이전 진료 기록 조회
	@Override
	public List<ClinicVO> selectClinicList(Map<String, String> map) {
		return doctorMapper.selectClinicList(map);
	}
	
	// 상병 전체 조회 ajax
	@Override
	public List<SickAndWoundedListVO> selectSAWList() {
		return doctorMapper.selectSAWList();
	}

	// 상병 검색 조회 ajax
	@Override
	public List<SickAndWoundedListVO> selectSAW(Map<String, String> map) {
		return doctorMapper.selectSAW(map);
	}

	// 검사 전체 조회 ajax
	@Override
	public List<HealthCheckupVO> selectHCList() {
		return doctorMapper.selectHCList();
	}

	// 검사 검색 조회 ajax
	@Override
	public List<HealthCheckupVO> selectHC(Map<String, String> map) {
		return doctorMapper.selectHC(map);
	}

	@Override
	public ServiceResult insertClinic(ClinicVO clinicVO) {
		ServiceResult result = null;
		int check = doctorMapper.checkClinic(clinicVO);
		
		if(check > 0) {
			int status = 0;
			status = doctorMapper.updateClinic(clinicVO);
			
			if(status > 0) {
				result = ServiceResult.OK;
			}else {
				result = ServiceResult.FAILED;
			}
		}else {
			int status = 0;
			
			status = doctorMapper.insertClinic(clinicVO);
			
			if(status > 0) {
				result = ServiceResult.OK;
			}else {
				result = ServiceResult.FAILED;
			}
			
		}
		
		return result;
	}
	// 치료 전체 조회 ajax
	@Override
	public List<MedicalTreatmentVO> selectMTList() {
		return doctorMapper.selectMTList();
	}
	// 치료 검색 조회 ajax
	@Override
	public List<MedicalTreatmentVO> selectMT(Map<String, String> map) {
		return doctorMapper.selectMT(map);
	}
	// 처방 전체 조회 ajax
	@Override
	public List<MedicineVO> selectMedList() {
		return doctorMapper.selectMedList();
	}
	// 처방 검색 조회 ajax
	@Override
	public List<MedicineVO> selectMed(Map<String, String> map) {
		return doctorMapper.selectMed(map);
	}
	
}

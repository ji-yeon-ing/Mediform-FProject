<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<!DOCTYPE html>
<html>
<head>
<style type="text/css">
#calendar .fc-day-sun{
	color: lightcoral;
}
#calendar .fc-day-sat{
	color: cornflowerblue;
}
.fc .fc-button-primary{
	background-color: midnightblue;
}
.fc .fc-scrollgrid{
	border: 1px solid
}
.form-select {
	padding-right: 10px;
}
</style>
<meta charset="UTF-8">
<title>메디폼 | 관리자</title>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js'></script>
<script type="text/javascript">
var token = $("meta[name='_csrf']").attr("content");
var header = $("meta[name='_csrf_header']").attr("content");

// 일정 수정 flag
var updateFlag = $("#updateFlag").val();
console.log("처음 updateFlag: " + updateFlag);

$(document).ready(function() {

	$.ajax({
		type: "GET",
		url: '/mediform/manager/scheduler/list',
		dataType: 'json',
		contentType: "application/json; charset=utf-8",
		beforeSend: function (xhr) {
            xhr.setRequestHeader(header, token);
        },
        success: function(param) {
        	console.log(param);
        	InitCalender(param);
        },	// success
        error: function(){
        	console.log("에러발생");
        }
	});
});

function InitCalender(param){
	if(calendar) {
        calendar.destroy();
    }
	
	var calendarEl = document.getElementById('calendar');
	var calendar = new FullCalendar.Calendar(calendarEl, {
		initialView: 'dayGridMonth',
		headerToolbar : {
			start: 'prev,next today',
			center: 'title',
			end: 'dayGridMonth,dayGridWeek,dayGridDay'
		},
		weekends: true,
		buttonText: {
			today: '오늘',
			month: '월간',
			week: '주간',
			day: '일간'
		},
		views: {
			dayGridMonth: {
				titleFormat: {month: 'long', year: 'numeric'}
			}
		},
		height: '700px',
		navLinks : true, 				// 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
		editable : true, 				// 수정 가능
		selectable : true, 				// 달력 일자 드래그 설정 가능
		droppable : true, 				// 드래그 앤 드롭
		events : param,
		locale : 'ko', 					// 한국어 설정
		select: function(info){			// 날짜 클릭 및 드래그로 이벤트(일정 등록) 생성
			NewSchedulerModal(info);
		},
		eventClick: function(info){		// 이벤트 클릭시 상세보기 & 수정 & 삭제
			updateFlag = "T";
			console.log("eventClick updateFlag: " + updateFlag);
			detailModal(info, updateFlag);
		},
		eventDrop: function(info){		// 드래그 앤 드랍 수정
			updateFlag = "T";
			console.log("eventDrop updateFlag: " + updateFlag);
			dragDropUpdate(info, updateFlag);
		}
	});
	
	if (param && param.length > 0) {
		searchFilterSchStart = param[0].searchFilterSchStart;
		schdlBgngDt = param[0].start;
		if(searchFilterSchStart != null){
			calendar.gotoDate(searchFilterSchStart);
		}
		if(schdlBgngDt != null){
			calendar.gotoDate(schdlBgngDt);
		}
		if (searchFilterSchStart == null && schdlBgngDt == null) {
		    calendar.gotoDate(new Date());
		}
	}
	
	calendar.render();
}
</script>
</head>
<body>
<c:set var="customUser" value="${sessionScope.SPRING_SECURITY_CONTEXT.authentication.principal}" />
<input type="hidden" name="loginEmpNo" id="loginEmpNo" value="${customUser.employee.empNo}"/>
<input type="hidden" name="loginEmpNm" id="loginEmpNm" value="${customUser.employee.empNm}"/>
<input type="hidden" name="loginEmpSe" id="loginEmpSe" value="${customUser.employee.empSe}"/>
<input type="hidden" name="loginEmpClsf" id="loginEmpClsf" value="${customUser.employee.empClsf}"/>
<input type="hidden" name="loginEmpYrycRemndr" id="loginEmpYrycRemndr" value="${customUser.employee.empYrycRemndr}"/>
<input type="hidden" name="loginEmpOffhodRemndr" id="loginEmpOffhodRemndr" value="${customUser.employee.empOffhodRemndr}"/>
<input type="hidden" name="loginEmpSicknsRemndr" id="loginEmpSicknsRemndr" value="${customUser.employee.empSicknsRemndr}"/>

<div class="row" style="height: 900px;">
	<!-- 캘린더 시작 -->
	<div class="col-7">
		<div class="card border border-secondary" >
			<div class="">
				<input class="fw-semi-bold col-12 text-white text-center form-control" id="calender" name="" type="text" value="달력" style="background-color: midnightblue" disabled />

				<!-- 캘린더 시작 -->
				<div style="display: flex; align-items: center; flex-direction: column;">
					<div class="card" style="width: 100%">
						<div class="card-body" style="background-color: aliceblue;">
							<div id="calendar"></div>
							<br/>
						</div>
					</div>
				</div>
				<!-- 캘린더 끝 -->
				
			</div>
		</div>
	</div>
	<!-- 캘린더 끝 -->
	
	<!-- 일정 시작 -->
	<div class="col-5">
		<div class="card border border-secondary" style="height: 800px;">
			<input class="fw-semi-bold col-12 text-white text-center form-control" name="" type="text" value="일정" style="background-color: midnightblue" disabled />

			<!-- 탭 바디 시작 -->
			<div class="card-body pt-0">
				<div>
				
				</div>
				
				<!-- 상단 날짜, 등록버튼 시작 -->
				<div class="row pt-3 pb-2 pe-3" style="width: 774px; padding-left: 23px">
					<div class="p-0 col-8 row">
						<div class="col-6 col-sm-auto d-flex align-items-center pe-0 search-Box">
							<input class="form-control form-control-sm datetimepicker" type="text"
								data-options='{"static":"true","format":"YYYY-MM-DD"}' id="searchSchedulerStart"
								name="searchSchedulerStart" value="${pagingVO.searchVO.searchFilterSchStart }" style="width: 150px"/>
						</div>
						<div class="col-1 pe-0" style="text-align: center; font-weight: bold; font-size: 15px;">~</div>
						<div class="col-5 col-sm-auto d-flex align-items-center pe-0 search-Box">
							<input class="form-control form-control-sm datetimepicker" type="text" 
								data-options='{"static":"true","format":"YYYY-MM-DD"}' id="searchSchedulerEnd"
								name="searchSchedulerEnd" value="${pagingVO.searchVO.searchFilterSchEnd }" style="width: 150px"/>
							<button class="input-group-text" id="schDateFilterBtn" style="padding-right: 10px; padding-left: 10px;"><i class="fas fa-search"></i></button>
						</div>
					</div>
					<div class="col-4 p-0" style="display: flex; justify-content: flex-end; height: 30px;">
						<button class="btn btn-falcon-primary btn-sm" type="button">
							<span class="d-none d-sm-inline-block ms-1" data-bs-toggle="modal" data-bs-target="#new-scheduler-modal" id="newSchedulerBtn" style="color: midnightblue;"><span class="fas fa-plus me-2"></span>일정등록</span>
						</button>
					</div>
				</div>
				<!-- 상단 날짜, 등록 버튼 끝 -->
				
				<!-- 일정 필터 & 검색 시작 -->
				<div class="card-body p-2">
					<div class="row col-12" style="width: 721px; padding-bottom: 10px; padding-left: 16px">
						<div class="col-6 p-0">
							<div class="search-box">
								<form class="col-6 col-sm-auto d-flex align-items-center pe-0" method="post" id="searchForm">
									<input type="hidden" name="page" id="page" />
									<div class="col-6 col-sm-auto d-flex align-items-center pe-0">
										<select class="form-select form-select-sm" aria-label="Default select example" style="width: 90px;" name="searchType">
											<option value="searchSchStart" <c:if test="${searchType eq 'searchSchStart' }">selected="selected"</c:if>>시작일</option>
											<option value="searchSchEnd" <c:if test="${searchType eq 'searchSchEnd' }">selected="selected"</c:if>>종료일</option>
										</select>
									</div>
									<div class="col-6 col-sm-auto d-flex align-items-center pe-0 search-Box">
										<input class="form-control form-control-sm datetimepicker" type="text"
											data-options='{"static":"true","format":"YYYY-MM-DD"}' placeholder="YYYY-MM-DD"
											name="searchWord" id="searchWord" value="${searchWord }" style="width: 120px"/>
										<button class="input-group-text" style="padding-right: 10px; padding-left: 10px;"><i class="fas fa-search"></i></button>
									</div>
									<sec:csrfInput />
								</form>
							</div>
						</div>
						<div class="col-6 p-0" style="display: flex; justify-content: flex-end;">
							<button class="btn btn-falcon-default btn-sm me-1" type="button" id="allResetButton">초기화</button>
							<button class="btn btn-falcon-default btn-sm me-1 filterBtn" type="button" value="all" style="float: left;">전체일정</button>
							<div class="dropdown font-sans-serif">
								<button class="btn dropdown-toggle btn-sm btn-falcon-default me-1" id="dropSchBtn" type="button" data-bs-toggle="dropdown"
									aria-haspopup="true" aria-expanded="false" style="float: left;">부서일정</button>
								<div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropSchBtn" style="--falcon-dropdown-min-width: 5.2rem; transform: translate(0px, 30px);">
									<button class="dropdown-item filterBtn dropSchBtn" value="h">병원</button>
									<button class="dropdown-item filterBtn dropSchBtn" value="a">원무</button>
									<button class="dropdown-item filterBtn dropSchBtn" value="d">의사</button>
									<button class="dropdown-item filterBtn dropSchBtn" value="n">간호</button>
									<button class="dropdown-item filterBtn dropSchBtn" value="t">치료</button>
								</div>
							</div>
							<button class="btn btn-falcon-default btn-sm me-1 filterBtn" type="button" value="my" style="float: left;">내 일정</button>
						</div>
					</div>
					<!-- 일정 필터 & 검색 끝 -->
				
					<!-- 일정 리스트 테이블 시작 -->
					<div id="schedulerTable" >
						<div class="table-responsive scrollbar" style="height: 610px;">
							<table class="table table-sm data-table table-striped fs--1 mb-0 overflow-hidden" data-list='{"valueNames":["count","start","end"]}'>
								<thead class="bg-200">
									<tr>
										<th class="text-900 sort pe-1" data-sort="count" style="text-align: center;">번호</th>
										<th class="text-900 sort pe-1" style="text-align: center;">일정명</th>
										<th class="text-900 sort pe-1" data-sort="start" style="text-align: center;">일정시작일</th>
										<th class="text-900 sort pe-1" data-sort="end" style="text-align: center;">일정종료일</th>
										<th class="text-900 sort pe-1" style="text-align: center; padding-right: 10px;">작성자</th>
									</tr>
								</thead>
								<tbody class="list" id="table-purchase-body">
								<c:set value="${pagingVO.dataList }" var="schList" />
								<c:choose>
									<c:when test="${empty schList }">
										<tr>
											<td colspan="17" align="center">일정정보가 존재하지 않습니다.</td>
										</tr>
									</c:when>
									<c:otherwise>
										<c:forEach items="${schList }" var="schList" varStatus="status">
											<tr class="btn-reveal-trigger">
												<td class="count align-middle white-space-nowrap" style="text-align: center;">${status.count}</td>
												<td class="align-middle white-space-nowrap" style="text-align: center; white-space: nowrap;
													overflow: hidden; text-overflow: ellipsis; max-width: 150px;">${schList.schdlNm }</td>
												<td class="start align-middle white-space-nowrap" style="text-align: center;">${schList.schdlBgngDt }</td>
												<td class="end align-middle white-space-nowrap" style="text-align: center;">${schList.schdlEndDt }</td>
												<td class="align-middle white-space-nowrap" style="text-align: center; padding-right: 10px;">${schList.schedulerEmpName }</td>
											</tr>
										</c:forEach>
									</c:otherwise>
								</c:choose>
								</tbody>
							</table>
						</div>
					</div>
					<div class="p-0 mt-2">
						<div class="p-0 card-footer clearfix col-auto align-self-center pagingArea" id="pagingArea" style="display: flex; justify-content: center;">${pagingVO.pagingHTML }</div>
					</div>
					<!-- 일정 리스트 테이블 끝 -->
					
				</div>
				
			</div>
			<!-- 탭 바디 끝 -->
			
			
		</div>
	</div>
</div>

<!-- 일정 등록 모달 시작 -->
<div class="modal fade" id="new-scheduler-modal" data-bs-keyboard="false" data-bs-backdrop="static" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content border-0">
			<div class="position-absolute top-0 end-0 mt-3 me-3 z-1">
				<button class="btn-close btn btn-sm btn-circle d-flex flex-center transition-base closeSchedulerBtn" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-0">
				<div class="rounded-top-3 bg-body-tertiary py-3 ps-4 pe-6">
					<h4 class="mb-1" id="textSchedulerTitle">일정 추가</h4>
				</div>
				<div class="p-4">
					<input type="hidden" value="F" id="updateFlag"/>
					<form action="/mediform/manager/scheduler/insert" method="POST" class="row g-3" id="insertSchedulerForm">
						<input type="hidden" name="schdlEmpNo" id="schdlEmpNo" value="${customUser.employee.empNo}"/>
						<input type="hidden" name="schdlAllDay" value="" id="allDay"/>
						<input type="hidden" name="schdlCd" value="" id="schdlCd"/>
						<div class="col-md-6" id="hiddenPstgDt" style="display: none;">
							<label class="form-label" for="pstgDt">작성날짜</label>
							<input class="form-control" type="text" id="pstgDt" name="pstgDt" value="" disabled="disabled"/>
						</div>
						<div class="col-md-6" id="hiddenSchdlUpdDt" style="display: none;">
							<label class="form-label" for="schdlUpdDt">수정날짜</label>
							<input class="form-control" type="text" id="schdlUpdDt" name="schdlUpdDt" value="" disabled="disabled"/>
						</div>
						<div class="col-md-2">
							<label class="form-label" for="schdlDepartment">구분</label>
						</div>
						<div class="col-md-10">
							<select class="form-select form-select-sm schdlDepartment" name="schdlDep" aria-label="Default select example">
								<option class="" value="h" selected="selected">병원</option>
								<option class="" value="a">원무과</option>
								<option class="" value="d">의사</option>
								<option class="" value="n">간호과</option>
								<option class="" value="t">치료사</option>
								<option class="" value="my">내 일정</option>
							</select>
						</div>
						<div class="col-md-12">
							<label class="form-label" for="schdlNm">일정명</label>
							<input class="form-control" id="schdlNm" name="schdlNm" type="text" placeholder="일정명을 입력하세요." required="required"/>
						</div>
						<div class="input-group">
							<div class="col-md-5">
								<div class="form-check form-switch">
									<input class="form-check-input" id="schdlAllDay" type="checkbox" value=""/> 
									<label class="form-label" for="schdlAllDay">하루종일</label>
								</div>
							</div>
							<div class="col-md-1">
								<label class="form-label" for="schdlColor">색상</label>
							</div>
							<div class="col-md-6">
								<select class="form-select schdlColor" id="schdlColor" name="schdlColor" aria-label="Default select example">
									<option class="bg-light" value="bg-light" selected="selected">White</option>
									<option class="bg-primary-subtle" value="bg-primary-subtle">Blue</option>
									<option class="bg-secondary-subtle" value="bg-secondary-subtle">Gray</option>
									<option class="bg-success-subtle" value="bg-success-subtle">Green</option>
									<option class="bg-info-subtle" value="bg-info-subtle">SkyBlue</option>
									<option class="bg-warning-subtle" value="bg-warning-subtle">Orange</option>
									<option class="bg-danger-subtle" value="bg-danger-subtle">Red</option>
								</select>
							</div>
						</div>
						<div class="col-md-6">
							<label class="form-label" for="schdlBgngDt">시작일</label>
							<input class="form-control datetimepicker" id="schdlBgngDt" name="schdlBgngDt" type="text" data-options='{"static":"true","enableTime":"true","format":"YYYY-MM-DD h:m"}' placeholder="YYYY-MM-DD hh:mm" required="required"/>
						</div>
						<div class="col-md-6">
							<label class="form-label" for="schdlEndDt">종료일</label>
							<input class="form-control datetimepicker" id="schdlEndDt" name="schdlEndDt" type="text" data-options='{"static":"true","enableTime":"true","format":"YYYY-MM-DD h:m"}' placeholder="YYYY-MM-DD hh:mm" required="required"/>
						</div>
						<div class="col-md-12">
							<label class="form-label" for="schdlCn">일정 내용</label>
							<textarea class="form-control" id="schdlCn" name="schdlCn" rows="3" placeholder="메모사항"></textarea>
						</div>
						<div class="col-md-12">
							<div align="right">
								<button class="btn btn-light btn-sm" type="reset" id="resetSchedulerBtn">초기화</button>
								<button class="btn btn-primary btn-sm" type="button" id="insertSchedulerBtn">등록</button>
								<button class="btn btn-secondary btn-sm closeSchedulerBtn" type="button" data-bs-dismiss="modal" id="closeSchedulerBtn">닫기</button>
							</div>
						</div>
						<sec:csrfInput /> 
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 일정 등록 모달 끝 -->


</body>

<link href="${pageContext.request.contextPath }/resources/vendors/flatpickr/flatpickr.min.css" rel="stylesheet" />
<script	src="${pageContext.request.contextPath }/resources/assets/js/flatpickr.js"></script>
<script type="text/javascript">

//////////////////////////////////////////////////////////////////
// 캘린더 이벤트 스크립트 시작

// 날짜 형식화 함수
function formatDate(date){
	var year = date.getFullYear();
	var month = String(date.getMonth() + 1).padStart(2, '0');
	var day = String(date.getDate()).padStart(2, '0');
	return year + "-" + month + "-" + day;
}

// 시간 형식화 함수
function formatTime(date){
	var hour = date.getHours().toString().padStart(2,'0');
	var minute = date.getMinutes().toString().padStart(2,'0');
	return hour + ":" + minute;
}

// datetimepicker 초기화 및 형식화 함수
function datetimepicker(date, id){
	$('#' + id).val(date);
	$('#' + id).flatpickr({
	    enableTime: true,
	    dateFormat: "Y-m-d H:i", 												// 날짜 및 시간 형식
	    defaultDate: date 														// 시작일 값 설정
	});
	return date;
}

// 한달간의 날짜
$(function() {
	var today = new Date();																// 현재시간
    var first = new Date(today.getFullYear(), today.getMonth());						// 첫날
    var last = new Date(today.getFullYear(), today.getMonth()+1, 0);					// 끝날
    var firstDay = formatDate(first);
    var lastDay = formatDate(last);
    
	$("#searchSchedulerStart").attr("placeholder", firstDay);
	$("#searchSchedulerEnd").attr("placeholder", lastDay);
});

// 하루종일
function allDayFunction(start, end){
	$("#schdlAllDay").on("change",function(){
		var schdlBgngDt = $("#schdlBgngDt");
		var schdlEndDt = $("#schdlEndDt");
		
		if($(this).is(":checked")){
			schdlBgngDt.readOnly = true;
			schdlBgngDt.val((start.toString() + ' 00:00'));
			schdlEndDt.readOnly = true;
			schdlEndDt.val((end.toString() + ' 23:59'));
			$(this).val("true");
		}else{
			schdlBgngDt.readOnly = false;
			schdlBgngDt.val("");
			schdlEndDt.readOnly = false;
			schdlEndDt.val("");
		}
	});
}

// 폼 초기화 함수
function resetForm(title){
	console.log("resetForm 함수 호출");
	console.log("수정이 아닐때 updateFlag : " + updateFlag);
	$("#hiddenPstgDt").hide();
	$("#hiddenSchdlUpdDt").hide();
	$("#textSchedulerTitle").html('일정추가');
	$("#insertSchedulerBtn").html('등록');
	$("#resetSchedulerBtn").html('초기화');
	$("#resetSchedulerBtn").attr("type", 'reset');
	$("#resetSchedulerBtn").removeClass('btn btn-danger btn-sm').addClass('btn btn-light btn-sm');
	$("#insertSchedulerForm")[0].reset();
	
}

function beginEnd(){
	var schdlBgngDt = $("#schdlBgngDt").val();
    var schdlEndDt = $("#schdlEndDt").val();
    
    // 시작일자 > 종료일자 일때
    if(schdlBgngDt >= schdlEndDt){
    	alert("종료일자는 시작일자보다 이후여야합니다.");
    }
}

// 일정 등록(버튼 클릭시)
$("#newSchedulerBtn").on("click",function(){
	resetForm();
	console.log(updateFlag);
	if(updateFlag == "F"){
	    var date = new Date();														// 현재시간
		var start = formatDate(date) + ' ' + formatTime(date);						// 시작날짜 셋팅
		var end = formatDate(date) + ' ' + formatTime(date);						// 종료날짜 셋팅
		console.log(start);
		console.log(end);
		datetimepicker(start, 'schdlBgngDt');
		datetimepicker(end, 'schdlEndDt');
		
		allDayFunction(formatDate(date), formatDate(date));
		
		$("#insertSchedulerBtn").on("click",function(){
			beginEnd();
			
		    $("#allDay").val("false");
		    if($("#schdlAllDay").is(":checked")){
		    	$("#allDay").val("true");
		    }
		    var insertForm = $("#insertSchedulerForm");
		    insertForm.attr("action", "/mediform/manager/scheduler/insert");	
		    insertForm.submit();
		});
	}
});


// 일정 등록(날짜 클릭시)
function NewSchedulerModal(info){
	resetForm();
	$('#new-scheduler-modal').modal('show');
    
	var start = info.startStr; 											// 선택된 시작 날짜
	var eventEnd1 = new Date(info.endStr); 								// 선택된 종료 날짜(+1)
	var eventEnd = new Date(eventEnd1);
	eventEnd.setDate(eventEnd1.getDate() - 1);							// 종료일자 - 1일
	var end = eventEnd.toISOString().substring(0,10);					// allDay 함수로 넘길 종료일
	
	var date = new Date();												// 시스템 시간
	var startSet = start + ' ' + formatTime(date);						// 시작날짜 셋팅
	var endSet = eventEnd.toISOString().substring(0,10) + ' ' + formatTime(date);	// 종료날짜 셋팅

	datetimepicker(startSet, 'schdlBgngDt');
	datetimepicker(endSet, 'schdlEndDt');
	
	allDayFunction(start, end);
	
	if(btnText == "등록"){
    	if(confirm("'" + title +"'을 수정하시겠습니까?")){
			$("#insertSchedulerBtn").on("click",function(){
				beginEnd();
			    
			    $("#allDay").val("false");
			    if($("#schdlAllDay").is(":checked")){
			    	$("#allDay").val("true");
			    }
			    var insertForm = $("#insertSchedulerForm");
			    insertForm.attr("action", "/mediform/manager/scheduler/insert");	
			    insertForm.submit();
			});
    	}
	}
}

// 닫기 버튼 클릭시
$(".closeSchedulerBtn").on("click", function(){
	updateFlag = "F";
	resetForm();
});

// 일정 상세보기 & 수정 & 삭제
function detailModal(info, updateFlag){
	console.log("일정 상세보기 & 수정 & 삭제 updateFlag: " + updateFlag);
	if(updateFlag == "T"){											// updateFlag가 "T"일때만 수정 실행
		$("#new-scheduler-modal").modal('show');
		$("#textSchedulerTitle").html("일정 상세");
		$("#hiddenPstgDt").show();
		$("#hiddenSchdlUpdDt").show();
	    $("#resetBtn").hide();
		
		var id = info.event.id;
		var dep = info.event.extendedProps.schdlDep;
		var title = info.event.title;
		var className = info.event.classNames;
		var allDay = info.event.extendedProps.schdlAllDay;
		var description = info.event.extendedProps.description;
		
		var start = info.event.start;										// 날짜 시작일
		var startFormat = formatDate(start) + " " + formatTime(start);
		
		var end = info.event.end;											// 날짜 종료일
		var endFormat = formatDate(end) + " " + formatTime(end);
		
		var pstgDt = info.event.extendedProps.pstgDt;						// 작성일
		var schdlUpdDt = info.event.extendedProps.schdlUpdDt;
		
		$("#schdlCd").val(id);
		$(".schdlDepartment").val(dep).change();
		$("#schdlNm").val(title);
		$(".schdlColor").val(className).change();
		$("#pstgDt").val(pstgDt);
		$("#schdlUpdDt").val(schdlUpdDt);
		$("#schdlCn").val(description);

		if(allDay == "true") {
			$("#schdlAllDay").prop("checked", true);
		    $("#allDay").val("true");
		} else {
			$("#schdlAllDay").prop("checked", false);
		    $("#allDay").val("false");
		}
		
		// 하루종일 날짜
		var startAllDay = new Date(start).toISOString().substring(0, 10);
		var endAllDay = new Date(end).toISOString().substring(0, 10);
		allDayFunction(startAllDay, endAllDay);
		
		datetimepicker(startFormat, 'schdlBgngDt');						// datetimepicker 셋팅
		datetimepicker(endFormat, 'schdlEndDt');
		
	    $("#insertSchedulerBtn").html("수정");
	    // 수정 버튼
	    $("#insertSchedulerBtn").on("click",function(){
	    	beginEnd();
		    
	    	var btnText = $(this).text();
	    	if(btnText == "수정"){
		    	if(confirm("'" + title +"'을 수정하시겠습니까?")){
					var insertForm = $("#insertSchedulerForm");
					insertForm.attr("action", "/mediform/manager/scheduler/update");	
					insertForm.submit();
		    	}else{
		    		$("#new-scheduler-modal").modal('hide');
					alert("수정을 취소하였습니다.");
		    	}
	    	}
	    	updateFlag = "F";
			console.log("수정 updateFlag : " + updateFlag);
	    });
	    
	    $("#resetSchedulerBtn").html("삭제");
	    $("#resetSchedulerBtn").type = "button";
	    $("#resetSchedulerBtn").removeClass("btn btn-light btn-sm").addClass("btn btn-danger btn-sm");
	    // 삭제 버튼
		$("#resetSchedulerBtn").on("click",function(){
			var btnText = $(this).text();
	    	
	    	if(btnText == "삭제"){
				if(confirm("'" + info.event.title +"'을 삭제하시겠습니까?")){
					
					var insertForm = $("#insertSchedulerForm");
					insertForm.attr("action", "/mediform/manager/scheduler/delete");
					insertForm.submit();
				}else{
					$("#new-scheduler-modal").modal('hide');
				}
	    	}
			updateFlag = "F";
			console.log("삭제 updateFlag : " + updateFlag);
		});
	    
	}else{ // 일정 상세보기 & 수정 & 삭제 updateFlag 'F'일때
		alert("다시 시도해주세요.");
		return false;
		resetForm();
	}
}

// 드래그 앤 드롭 기능
function dragDropUpdate(info, updateFlag) {
	console.log("드래그 앤 드롭 기능 updateFlag : " + updateFlag);
	if(updateFlag == "T"){					// updateFlag T일때
		var id = info.event.id;
		var title = info.event.title;
		var dep = info.event.extendedProps.schdlDep;
		var description = info.event.extendedProps.description;
		var pstgDt = info.event.extendedProps.pstgDt;
		var className = info.event.classNames;
		var allDay = info.event.extendedProps.schdlAllDay;
		
		$("#schdlCd").val(id);
		$("#schdlNm").val(title);
		$(".schdlDepartment").val(dep).change();
		$("#schdlCn").val(description);
		$("#pstgDt").val(pstgDt);
		$(".schdlColor").val(className).change();
		
		$("#allDay").val("false");
	    if(allDay == "true"){
	    	$("#allDay").val("true");
	    }

		// 형식에 맞춘 날짜
		var start = info.event.start;										// 날짜 시작일
		var startFormat = formatDate(start) + " " + formatTime(start);
		
		var end = info.event.end;											// 날짜 종료일
		var endFormat = formatDate(end) + " " + formatTime(end);
		
		$("#schdlBgngDt").val(startFormat);
 	    $("#schdlEndDt").val(endFormat);
		
	    if(confirm("'" + title +"'을 수정하시겠습니까?")){
			var insertForm = $("#insertSchedulerForm");
			insertForm.attr("action", "/mediform/manager/scheduler/update");	
			insertForm.submit();
		}else{
    		$("#new-scheduler-modal").modal('hide');
    	}
		
		updateFlag = "F";
		console.log("드래그앤드랍 수정 updateFlag : " + updateFlag);
		
	}else{ // 일정 수정 updateFlag 'F'일때
		alert("다시 시도해주세요.");
		return false;
		resetForm();
	}
}
// 캘린더 이벤트 스크립트 끝

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 일정 list 스크립트 시작

$("#allSchBtn").on('click',function(){
	location.href = "/mediform/manager/scheduler/main";
});

// 필터 적용(버튼필터)
var html = "";
var schedulerFlag = false;
var schdlDep;

$(".filterBtn").click(function() {
	console.log($(this).val());
    html = "<input type='hidden' name='schdlDep' id='schdlDep' value='" + $(this).val() + "'>";
    schedulerFlag = true;
	
    if(schedulerFlag){
		html += "<input type='hidden' name='filterFlag' value='true'>";
    }
	$("#searchForm").append(html);
	console.log($("#searchForm").html());
	
	$("#searchForm").submit();
});

$("#schDateFilterBtn").on('click', function() {
	var sSS = new Date($("#searchSchedulerStart").val());
	var sSE = new Date($("#searchSchedulerEnd").val());
	var formatSSS = formatDate(sSS);
	var formatSSE = formatDate(sSE);
	
	if(sSS > sSE){
		alert("시작날짜보다 종료날짜가 이후여야합니다!");
	}else{
		html = "<input type='hidden' name='searchFilterSchStart' value='" + formatSSS + "'>";
	    html += "<input type='hidden' name='searchFilterSchEnd' value='" + formatSSE + "'>";
	    schedulerFlag = true;
		
	    if(schedulerFlag){
			html += "<input type='hidden' name='filterFlag' value='true'>";
	    }
	    console.log(html);
		$("#searchForm").append(html);
		
		$("#searchForm").submit();
	}
});

// 페이징
$(function(){
	var searchForm = $("#searchForm");
	var pagingArea = $("#pagingArea");
	
	pagingArea.on("click", "a", function(event){
		event.preventDefault();
		var pageNo = $(this).data("page");
		searchForm.find("#page").val(pageNo);
		searchForm.submit();
	});
});

$(function(){
	$("#allResetButton").on('click',function(){
		location.href = "/mediform/manager/scheduler/main";
	});
});

// 일정 list 스크립트 끝

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

</script>
</html>
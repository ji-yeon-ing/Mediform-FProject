package kr.or.ddit.nurse.controller;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.vo.PaginationInfoVO;
import kr.or.ddit.nurse.service.IMedicineService;
import kr.or.ddit.nurse.vo.MedicineVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping(value="/mediform/nurse/medicine")
public class MedicineController {
	
	@Inject
	private IMedicineService medicineService;
	
	// 약품재고현황조회 
	@RequestMapping(value = "/list/select")
	public String medicineMain(
		@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
		@RequestParam(required = false, defaultValue = "medcinnm") String searchType,
		@RequestParam(required = false) String searchWord,
		MedicineVO medicineVO,
		Model model) {
		
		log.info("medicineList() 실행...!");

		// 약품재고현황조회 
		PaginationInfoVO<MedicineVO> pagingVO = new PaginationInfoVO<MedicineVO>();
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			model.addAttribute("searchType", searchType);
			model.addAttribute("searchWord", searchWord);
		}
		
		pagingVO.setCurrentPage(currentPage);
		int totalRecord = medicineService.selectMedicineCount(pagingVO);
		
		pagingVO.setTotalRecord(totalRecord);
		
		List<MedicineVO> dataList = medicineService.selectMedicinePagingList(pagingVO);
		pagingVO.setDataList(dataList);
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "nurse/medicineMain";
	}
	
	// 발주서 조회 
	@ResponseBody
	@RequestMapping(value="/orderlist/list", method=RequestMethod.POST)
	public List<MedicineVO> orderList(@RequestBody Map<String, String> map) {
		
		log.info("orderList() 실행");
		
		List<MedicineVO> orderList = medicineService.selectOrderList(map);
		
		log.info("orderList : " + orderList);
		
		return orderList;
		
	}

	// 약품 검색(ajax)
	@ResponseBody
	@PostMapping("/search")
	public List<MedicineVO> medicineSearch(@RequestBody Map<String, String> map) {
		
		List<MedicineVO> medicineList = medicineService.medicineSearch(map);
		
		log.info("medicineList : "+ medicineList);
		return medicineList;
	}
	
	
	// 약품 정보 조회(ajax)
	@ResponseBody
	@PostMapping("/info")
	public MedicineVO medicineInfo(@RequestBody Map<String, String> map) {
		
		MedicineVO medicineInfo = medicineService.selectMedicine(map);
		
		log.info("medicineInfo : "+ medicineInfo);
		return medicineInfo;
	}
	
	
//	@ResponseBody
//	@PostMapping("/searchList")
//	public List<MedicineVO> medicineSearchList(@RequestBody MedicineVO madicineVO) {
//		
//		List<MedicineVO> medicineList = medicineService.selectMedicineList(madicineVO.getMedcinNm());
//		
//		log.info("medicineList : "+ medicineList);
//		return medicineList;
//	}
	
	
}
